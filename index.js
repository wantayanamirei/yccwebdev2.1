import { catalog } from './catalog.js';

const century = 19;
const search = '–°—Ç—Ä—É–≥–∞—Ü–∫–∏–µ';

// I. –í—ã–≤–æ–¥ —è–∑—ã–∫–æ–≤
function getLanguages(books) {
  const languages = books.map(book => book.language);
  const uniqueLanguages = [...new Set(languages)];
  console.log('üìö –Ø–∑—ã–∫–∏ –∫–Ω–∏–≥ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ:');
  console.log(uniqueLanguages.join(' - ') + '\n');
}

// II. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–Ω–∏–≥ –ø–æ –≤–µ–∫—É
function filterByCentury(books, century) {
  const startYear = (century - 1) * 100 + 1;
  const endYear = century * 100;
  
  return books.filter(book => 
    book.year >= startYear && 
    book.year <= endYear
  );
}

// III. –ü–æ–∏—Å–∫ –ø–æ –∞–≤—Ç–æ—Ä—É –∏ –Ω–∞–∑–≤–∞–Ω–∏—é
function searchBooks(books, query) {
  const lowerQuery = query.toLowerCase();
  return books.filter(book => 
    book.author.toLowerCase().includes(lowerQuery) ||
    book.title.toLowerCase().includes(lowerQuery)
  );
}

// 1. –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —è–∑—ã–∫–∏
getLanguages(catalog);

// 2. –ö–Ω–∏–≥–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤–µ–∫–∞
console.log(`üìÖ –ö–Ω–∏–≥–∏ ${century} –≤–µ–∫–∞:`);
const centuryBooks = filterByCentury(catalog, century);
if (centuryBooks.length > 0) {
  centuryBooks.forEach(book => console.log(
    `- "${book.title}" ${book.author} (${book.year})`
  ));
} else {
  console.log('–ö–Ω–∏–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚ùå');
}

// 3. –ü–æ–∏—Å–∫ –∫–Ω–∏–≥
console.log(`\nüîé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ "${search}":`);
const foundBooks = searchBooks(catalog, search);
if (foundBooks.length > 0) {
  foundBooks.forEach(book => console.log(
    `- ${book.author} - "${book.title}"`
  ));
} else {
  console.log('–ö–Ω–∏–≥–∏ –∏/–∏–ª–∏ –∞–≤—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã ‚ùå');
}
